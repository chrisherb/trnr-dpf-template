name: build dpf plugins

on: 
  push:
    tags:
      - "*"

jobs:
  linux-cmake:
    strategy:
      matrix:
        target: [linux-arm64, linux-armhf, linux-i686, linux-riscv64, linux-x86_64]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: set environment variable
        run: echo "BUILD_DPF=ON" >> $GITHUB_ENV
      - uses: chrisherb/dpf-cmake-action@main
        with:
          target: ${{ matrix.target }}
          dpf_path: lib/dpf
          extraargs: 

  macos-cmake:
    strategy:
      matrix:
        target: [macos-intel, macos-universal]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: set environment variable
        run: echo "BUILD_DPF=ON" >> $GITHUB_ENV
      - uses: chrisherb/dpf-cmake-action@main
        with:
          target: ${{ matrix.target }}
          macOS_certificate: "${{ secrets.MACOS_CERTIFICATE }}"
          macOS_certificate_pw: "${{ secrets.MACOS_CERTIFICATE_PW }}"
          dpf_path: lib/dpf

  windows-cmake:
    strategy:
      matrix:
        target: [win32, win64]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: set environment variable
        run: echo "BUILD_DPF=ON" >> $GITHUB_ENV
      - uses: chrisherb/dpf-cmake-action@main
        with:
          target: ${{ matrix.target }}
          pawpaw: true
          dpf_path: lib/dpf

  pluginval:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: set environment variable
        run: echo "BUILD_DPF=ON" >> $GITHUB_ENV
      - uses: chrisherb/dpf-cmake-action@main
        with:
          target: pluginval
          dpf_path: lib/dpf
